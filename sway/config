# Config for sway
#
# Read `man 5 sway` for a complete reference.

#*****************************************************************

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
    set $mod Mod4

# reload the configuration file
    bindsym $mod+Shift+c reload

# Set wallpaper:
    #exec swaybg -i ~/Pictures/wallpapers/wp1.jpg
    exec_always --no-startup-id ~/.azotebg

#Set Path:
    set $lock_path ~/.config/sway/scripts/lock.sh
    set $idle_path ~/.config/sway/scripts/idle.sh

#start always
    exec_always --no-startup-id dunst
    exec_always --no-startup-id autotiling
    exec_always --no-startup-id ~/.config/sway/scripts/idle.sh
    exec_always --no-startup-id ~/.config/sway/scripts/battery-low-notify.sh
    exec_always --no-startup-id easyeffects --gapplication-service 

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
    font xft:URWGothic-Book 11

bar {
    swaybar_command waybar
}

#█▄▄ █▀█ █▀█ █▀▄ █▀▀ █▀█
#█▄█ █▄█ █▀▄ █▄▀ ██▄ █▀▄
                
# Configure border style <normal|1pixel|pixel xx|none|pixel>
    default_border pixel 2.5
    default_floating_border normal

# Hide borders
    hide_edge_borders none

# change borders
    bindsym $mod+u border none
    bindsym $mod+y border pixel 2
    #bindsym $mod+n border normal
    client.focused "#3457D5" "#3385F5" "#ffffff" "#3385F5"

################################################################################################

# █▄▀ █▀▀ █▄█   █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
# █░█ ██▄ ░█░   █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# kill focused window
    bindsym $mod+Q kill

# Start Applications
    bindsym $mod+e exec thunar

# start a terminal
    bindsym $mod+Return exec kitty

# start program launcher
    bindsym $mod+d exec --no-startup-id wofi

#dunst
    bindsym $mod+o exec notify-send -t 3500 "$(date '+%a %b %e %r')"
    bindsym $mod+i exec notify-send "$(curl wttr.in/pokhara?format=3)"

#poweroff, reboot shortcuts
    bindsym $mod+Shift+End exec poweroff
    bindsym $mod+Shift+Home exec reboot

# █▀▄▀█ █▀█ █░█ █ █▄░█ █▀▀   ▄▀█ █▀█ █▀█ █░█ █▄░█ █▀▄
# █░▀░█ █▄█ ▀▄▀ █ █░▀█ █▄█   █▀█ █▀▄ █▄█ █▄█ █░▀█ █▄▀

# Use Mouse+$mod to drag floating windows
    floating_modifier $mod

# change focus
    bindsym $mod+j focus left
    bindsym $mod+k focus down
    bindsym $mod+l focus up
    bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

# move focused window
    bindsym $mod+Shift+j move left
    bindsym $mod+Shift+k move down
    bindsym $mod+Shift+l move up
    bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# █░░ ▄▀█ █▄█ █▀█ █░█ ▀█▀   █▀ ▀█▀ █░█ █▀▀ █▀▀
# █▄▄ █▀█ ░█░ █▄█ █▄█ ░█░   ▄█ ░█░ █▄█ █▀░ █▀░

    # focus_follows_mouse no

    gaps {
      inner 4
      outer 6
    }

    # set default desktop layout (default is tiling)
    # workspace_layout tabbed <stacking|tabbed>

# split orientation
    #bindsym $mod+h split h;exec notify-send 'tile horizontally'
    #bindsym $mod+v split v;exec notify-send 'tile vertically'
    #bindsym $mod+q split toggle

# toggle fullscreen mode for the focused container
    bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
    #bindsym $mod+s layout stacking
    #bindsym $mod+e layout tabbed
    #bindsym $mod+w layout toggle split

# toggle tiling / floating
    bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
    bindsym $mod+space focus mode_toggle

# toggle sticky
    bindsym $mod+Shift+s sticky toggle

# focus the parent container
    #bindsym $mod+a focus parent

# move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show          

# █░█░█ █▀█ █▀█ █▄▀ █▀ █▀█ ▄▀█ █▀▀ █▀▀ █▀
# ▀▄▀▄▀ █▄█ █▀▄ █░█ ▄█ █▀▀ █▀█ █▄▄ ██▄ ▄█

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:
    set $ws1 1
    set $ws2 2
    set $ws3 3
    set $ws4 4
    set $ws5 5
    set $ws6 6
    set $ws7 7
    set $ws8 8

# switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8

# Move to workspace with focused container
    bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8

# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

#navigate workspaces next / previous
    bindsym $mod+Ctrl+Right workspace next
    bindsym $mod+Ctrl+Left workspace prev

# workspace back and forth (with/without active container)
    workspace_auto_back_and_forth yes
    bindsym $mod+Tab workspace back_and_forth
    bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# Open applications on specific workspaces
# Assign workspace
    assign [class="VirtualBox Machine"] workspace 6


# switch to workspace with urgent window automatically
    for_window [urgent=latest] focus

# █▀█ █▀▀ █▀ █ ▀█ █ █▄░█ █▀▀   █▀▀ █▀█ █▄░█ ▀█▀ ▄▀█ █ █▄░█ █▀▀ █▀█ █▀
# █▀▄ ██▄ ▄█ █ █▄ █ █░▀█ █▄█   █▄▄ █▄█ █░▀█ ░█░ █▀█ █ █░▀█ ██▄ █▀▄ ▄█ (you can also use the mouse for that)

    bindsym $mod+r mode "resize"
    mode "resize" {
            # These bindings trigger as soon as you enter the resize mode
            # Pressing left will shrink the window’s width.
            # Pressing right will grow the window’s width.
            # Pressing up will shrink the window’s height.
            # Pressing down will grow the window’s height.
            bindsym j resize shrink width 5 px or 5 ppt
            bindsym k resize grow height 5 px or 5 ppt
            bindsym l resize shrink height 5 px or 5 ppt
            bindsym semicolon resize grow width 5 px or 5 ppt

            # same bindings, but for the arrow keys
            bindsym Left resize shrink width 10 px or 10 ppt
            bindsym Down resize grow height 10 px or 10 ppt
            bindsym Up resize shrink height 10 px or 10 ppt
            bindsym Right resize grow width 10 px or 10 ppt

            # exit resize mode: Enter or Escape
            bindsym Return mode "default"
            bindsym Escape mode "default"
    }

# █░░ █▀█ █▀▀ █▄▀
# █▄▄ █▄█ █▄▄ █░█

bindsym $mod+0 exec $lock_path

# █▀▄▀█ █▀▀ █▀▄ █ ▄▀█   █▄▀ █▀▀ █▄█ █▀
# █░▀░█ ██▄ █▄▀ █ █▀█   █░█ ██▄ ░█░ ▄█


# Volume

    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%    
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%    
    bindsym --locked XF86AudioMute exec "pactl set-sink-mute @DEFAULT_SINK@ toggle"

# Player

    bindsym XF86AudioPlay exec mpc toggle
    bindsym XF86AudioStop exec mpc stop
    bindsym XF86AudioNext exec mpc next
    bindsym XF86AudioPrev exec mpc prev

# Backlight

    bindsym XF86MonBrightnessUp exec brightnessctl -c backlight set +5%
    bindsym XF86MonBrightnessDown exec brightnessctl -c backlight set 5%-

# █ █▄░█ █▀█ █░█ ▀█▀   █▀▀ █▀█ █▄░█ █▀▀ █ █▀▀
# █ █░▀█ █▀▀ █▄█ ░█░   █▄▄ █▄█ █░▀█ █▀░ █ █▄█

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input type:touchpad {
    tap enabled
    scroll_method two_finger edge
#    dwt disabled
}

input * {
    xkb_layout "us,us"
    xkb_variant ",colemak_dh"
    xkb_options "caps:shift_modifier,grp:ctrl_space_toggle"
}


### Idle configuration
# exec swayidle -w \
#  	timeout 250 'swaylock -f -c 000000' \
#  	timeout 400 'swaymsg "output * dpms off"' \
#    resume 'swaymsg "output * dpms on"' \
#  	before-sleep 'swaylock -f -c 000000'

# █▀▀ █░█ █▀ ▀█▀ █▀█ █▀▄▀█   █▄▄ █ █▄░█ █▀▄
# █▄▄ █▄█ ▄█ ░█░ █▄█ █░▀░█   █▄█ █ █░▀█ █▄▀

#Screenshot
##capture selected area to clipboard 
    bindsym $mod+s exec grim -g "$(slurp)" - | wl-copy && notify-send "Screenshot copied"

##capture all screen to clipboard and saves
    bindsym $mod+Print exec IMG=~/Pictures/screenshot_$(date +%Y%m%d_%H%M%S).png && grim $IMG && wl-copy < $IMG && notify-send "Screenshot saved"

##capture selected area and saves
    bindsym $mod+Shift+Print exec IMG=~/Pictures/screenshot_$(date +%Y%m%d_%H%M%S).png && grim -g "$(slurp)" $IMG && wl-copy < $IMG && notify-send "Screenshot saved"
    bindsym Control+Shift+Print exec IMG=~/Pictures/nwa/screenshot_$(date +%Y%m%d_%H%M%S).png && grim -g "$(slurp)" $IMG && wl-copy < $IMG && notify-send "Screenshot saved"

#Screenrecord
    set $screenrecord wf-recorder -g "$(slurp)" --audio=alsa_output.pci-0000_08_00.6.analog-stereo.monitor -f ~/Videos/wf-recorder/mov-$(date +"%Y-%m-%d--%H-%M-%S.mp4")
    bindsym $mod+v exec $screenrecord
    bindsym Shift+Control+BackSpace exec killall -s SIGINT wf-recorder; exec killall ffmpeg && notify-send "Recording Saved"

#Audiorecord
    set $audiorecord ffmpeg -f pulse -i alsa_output.pci-0000_00_1b.0.analog-stereo.monitor ~/Audio/aud-$(date +%Y%m%d_%H%M%S).mp3
    bindsym $mod+a exec $audiorecord
